{"version":3,"sources":["components/products/products.js","components/users/users.js","components/posts/postforms.js","components/header/header.js","components/footer/footer.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Products","Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","products","isLoaded","_this2","fetch","then","res","json","setState","console","log","response","_this$state","react_default","a","createElement","map","product","index","key","name","price","PostForm","props","onChange","bind","assertThisInitialized","onSubmit","e","defineProperty","target","value","preventDefault","post","method","headers","content-type","body","JSON","stringify","data","placeholder","type","Header","className","Footer","aria-hidden","App","header","src","logo","alt","postforms","products_products","footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"kSA6CeA,eC1CKC,wBDAnB,SAAAD,IAAe,IAAAE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,QACKI,MAAQ,CACZC,SAAS,GACTC,UAAU,GAJGT,mFAQI,IAAAU,EAAAP,KAClBQ,MAAM,aACLC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GACLJ,EAAKK,SAAS,CACbN,UAAU,EACVD,SAAUM,IAEXE,QAAQC,IAAI,sBAAuBP,EAAKH,MAAMC,SAASU,SAASV,6CAGxD,IAAAW,EACmBhB,KAAKI,MAA3BE,EADGU,EACHV,SAAUD,EADPW,EACOX,SAEjB,OAAKC,EAIEW,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,WAEAd,EAASU,SAASV,SAASe,IAAI,SAACC,EAASC,GAAV,OAClCL,EAAAC,EAAAC,cAAA,OAAKI,IAAKD,GACTL,EAAAC,EAAAC,cAAA,WAAME,EAAQG,MACdP,EAAAC,EAAAC,cAAA,WAAME,EAAQI,YATNR,EAAAC,EAAAC,cAAA,iCAxBQvB,6BEmDR8B,cAlDd,SAAAA,EAAaC,GAAO,IAAA9B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0B,IACnB7B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4B,GAAAvB,KAAAH,KAAM2B,KACDvB,MAAQ,CACZoB,KAAK,GACLC,MAAM,IAEP5B,EAAK+B,SAAW/B,EAAK+B,SAASC,KAAd/B,OAAAgC,EAAA,EAAAhC,QAAAgC,EAAA,EAAAhC,CAAAD,KAChBA,EAAKkC,SAAWlC,EAAKkC,SAASF,KAAd/B,OAAAgC,EAAA,EAAAhC,QAAAgC,EAAA,EAAAhC,CAAAD,KAPGA,wEAUXmC,GACRhC,KAAKY,SAALd,OAAAmC,EAAA,EAAAnC,CAAA,GAAgBkC,EAAEE,OAAOV,KAAOQ,EAAEE,OAAOC,yCAGjCH,GACPA,EAAEI,iBACF,IAAMC,EAAO,CACZb,KAAMxB,KAAKI,MAAMoB,KACjBC,MAAMzB,KAAKI,MAAMqB,OAElBjB,MAAM,qCAAsC,CAC3C8B,OAAO,OACPC,QAAQ,CACPC,eAAe,oBAEhBC,KAAMC,KAAKC,UAAUN,KAErB5B,KAAK,SAAAC,GAAG,OAAEA,EAAIC,SACdF,KAAK,SAAAmC,GAAI,OAAE/B,QAAQC,IAAI8B,sCAInB,OACA3B,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,QAAMY,SAAU/B,KAAK+B,UACrBd,EAAAC,EAAAC,cAAA,qBAAmBF,EAAAC,EAAAC,cAAA,WAClBF,EAAAC,EAAAC,cAAA,SAAQK,KAAK,OAAOW,MAAOnC,KAAKI,MAAMoB,KAAMI,SAAU5B,KAAK4B,SAAUiB,YAAY,2BAA2BC,KAAK,SACjH7B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOK,KAAK,QAAQW,MAAOnC,KAAKI,MAAMqB,MAAOG,SAAU5B,KAAK4B,SAAUiB,YAAY,2BAA2BC,KAAK,SAClH7B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO2B,KAAK,qBA5CAlD,aCQRmD,mLANX,OACF9B,EAAAC,EAAAC,cAAA,OAAK6B,UAAU,WAAU/B,EAAAC,EAAAC,cAAA,kCAHNvB,aCYNqD,mLATP,OACChC,EAAAC,EAAAC,cAAA,OAAK6B,UAAU,UACb/B,EAAAC,EAAAC,cAAA,QAAM6B,UAAU,sBAAsBE,cAAY,SAClDjC,EAAAC,EAAAC,cAAA,QAAM6B,UAAU,iBAAiBE,cAAY,SAC7CjC,EAAAC,EAAAC,cAAA,QAAM6B,UAAU,yBAAyBE,cAAY,iBAP3CtD,aCuBNuD,mLAfX,OACElC,EAAAC,EAAAC,cAAA,OAAK6B,UAAU,OACb/B,EAAAC,EAAAC,cAACiC,EAAD,MACAnC,EAAAC,EAAAC,cAAA,UAAQ6B,UAAU,cAChB/B,EAAAC,EAAAC,cAAA,OAAKkC,IAAKC,IAAMN,UAAU,WAAWO,IAAI,SAEzCtC,EAAAC,EAAAC,cAACqC,EAAD,OAEFvC,EAAAC,EAAAC,cAACsC,EAAD,MACAxC,EAAAC,EAAAC,cAACuC,EAAD,cAXU9D,aCEE+D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9D,KAAK,SAAA+D,GACjCA,EAAaC,kCE3HnBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.7d97aa03.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Products extends Component {\r\n\tconstructor () {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tproducts:[],\r\n\t\t\tisLoaded: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('/products')\r\n\t\t.then(res => res.json())\r\n\t\t.then(json => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisLoaded: true,\r\n\t\t\t\tproducts: json\r\n\t\t\t});\r\n\t\t\tconsole.log('Products fetched ..', this.state.products.response.products);\t\r\n\t\t});\r\n}\r\n  render() {\r\n  \tvar {isLoaded, products} = this.state;\r\n    \r\n\tif (!isLoaded){\r\n       \treturn <div>Loading ...</div>\r\n       } else {\r\n       \treturn(\r\n       \t<div>\t\r\n       \t\t<div>\r\n       \t\t\r\n\t   \t\t\t\t{products.response.products.map((product, index) => (\r\n\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t<div>{product.name}</div>\r\n\t\t\t\t\t\t\t<div>{product.price}</div>\r\n\t\t\t\t\t\t</div>\r\n\t   \t\t\t\t))}\r\n   \t\t\t\t\r\n       \t\t</div>\r\n\t      </div>\r\n       \t);\r\n      }\r\n  }\r\n}\r\nexport default Products;\r\n","import React, { Component } from 'react';\r\nimport './utils.css';\r\n\r\nclass Users extends Component {\r\n\tconstructor () {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tusers:[],\r\n\t\t\tproducts:[],\r\n\t\t\tisLoaded: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('/api/users')\r\n\t\t.then(res => res.json())\r\n\t\t.then(json => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisLoaded: true,\r\n\t\t\t\tusers: json\r\n\t\t\t});\r\n\t\t\tconsole.log('Users fetched ..', this.state.users.users);\t\r\n\t\t});\r\n}\r\n  render() {\r\n  \tvar {isLoaded, users} = this.state;\r\n    \r\n\tif (!isLoaded){\r\n       \treturn <div>Loading ...</div>\r\n       } else {\r\n       \treturn(\r\n       \t<div>\t\r\n       \t\t<div>\r\n   \t\t{/*\t\t{users.users.map((user, index) => (\r\n\t\t\t\t\t<span key={index}>\r\n\t\t\t\t\t\t{user.userFirstName} {user.userLastName}\r\n\t\t\t\t\t</span>\t\r\n   \t\t\t\t))}*/}\r\n       \t\t</div>\r\n       \t\t\r\n\t      </div>\r\n       \t);\r\n      }\r\n  }\r\n}\r\nexport default Users;\r\n","import React, { Component } from 'react';\r\n\r\nclass PostForm extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tname:'',\r\n\t\t\tprice:''\r\n\t\t};\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onSubmit = this.onSubmit.bind(this);\r\n\t}\r\n\r\n\tonChange(e){\r\n\t\tthis.setState({[e.target.name]: e.target.value})\r\n\t}\r\n\r\n\tonSubmit(e){\r\n\t\t e.preventDefault();\r\n\t\t const post = {\r\n\t\t \tname: this.state.name,\r\n\t\t \tprice:this.state.price\r\n\t\t };\r\n\t\t fetch('http://localhost:5000/api/products', {\r\n\t\t \tmethod:'POST',\r\n\t\t \theaders:{\r\n\t\t \t\t'content-type':'application-json'\r\n\t\t \t},\r\n\t\t \tbody: JSON.stringify(post)\r\n\t\t })\r\n\t\t .then(res=>res.json())\r\n\t\t .then(data=>console.log(data)); \r\n\t}\r\n\r\n  render() {\r\n       \treturn(\r\n       \t<div>\t\r\n       \t\t<div>\r\n\t\t        <form onSubmit={this.onSubmit}>\r\n\t\t        <label>Name</label><br/>\r\n\t\t        \t<input  name=\"name\" value={this.state.name} onChange={this.onChange} placeholder=\"What will your verse be?\" type=\"text\"/>\r\n\t\t        \t<br/>\r\n\t\t        \t<label>Price</label>\r\n\t\t        \t<br/>\r\n\t\t        \t<input name=\"price\" value={this.state.price} onChange={this.onChange} placeholder=\"What will your verse be?\" type=\"text\"/>\r\n\t\t        \t<br/>\r\n\t\t        \t<input type=\"submit\"/>\r\n\t\t        </form>\r\n\t      \t</div>\r\n\t      </div>\r\n       \t);\r\n      }\r\n}\r\nexport default PostForm;\r\n","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n\t\t<div className=\"nav-bar\"><h1>The Powerful</h1></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n        ","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n\r\n  render() {\r\n       \treturn(\r\n       \t\t<div className=\"footer\">\r\n\t          <span className=\"fa fa-heartbeat col\" aria-hidden=\"true\"></span>\r\n\t          <span className=\"fa fa-home col\" aria-hidden=\"true\"></span>\r\n\t          <span className=\"fa fa-prescription col\" aria-hidden=\"true\"></span>\r\n        \t</div>\r\n       \t);\r\n      }\r\n}\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Users from './components/users/users';\nimport Products from './components/products/products';\nimport PostForm from './components/posts/postforms';\nimport Header from './components/header/header';\nimport Footer from './components/footer/footer';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          {/*<Users />*/}\n          <PostForm />\n        </header>\n        <Products />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}